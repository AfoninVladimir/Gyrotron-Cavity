########################################################################################################################
##
## BY: AFONIN VLADIMIR ALEKSEEVICH
##
## PROJECT: GYROTRON CAVITY GUI
##
## V: 1.0.0
##
########################################################################################################################
# -*- coding: utf-8 -*-
# Created by: PyQt5 UI code generator 5.15.4
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
########################################################################################################################


from import_all import *
import subprocess, time

# глобальные переменные
Ri = np.array([0.0])
v = []


class Ui_MainWindow(object):

    # тело окна
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1200, 740)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setStyleSheet("background-color: rgb(52, 54, 67);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(2)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.Panel_Up = QtWidgets.QFrame(self.frame)
        self.Panel_Up.setMaximumSize(QtCore.QSize(16777215, 45))
        self.Panel_Up.setStyleSheet("background-color: rgb(26, 28, 34);")
        self.Panel_Up.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Panel_Up.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Panel_Up.setObjectName("Panel_Up")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.Panel_Up)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.Icon = QtWidgets.QFrame(self.Panel_Up)
        self.Icon.setMaximumSize(QtCore.QSize(41, 44))
        self.Icon.setStyleSheet(
            "background-image: url(icons/Без имени-1.png);\n")
        self.Icon.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Icon.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Icon.setObjectName("Icon")
        self.horizontalLayout_2.addWidget(self.Icon)
        self.Lable_Up = QtWidgets.QFrame(self.Panel_Up)
        self.Lable_Up.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.Lable_Up.setStyleSheet("color: rgb(91, 200, 197);")
        self.Lable_Up.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Lable_Up.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Lable_Up.setObjectName("Lable_Up")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.Lable_Up)
        self.horizontalLayout_3.setContentsMargins(20, 0, 0, 0)
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.Program_Name = QtWidgets.QLabel(self.Lable_Up)
        self.Program_Name.setMaximumSize(QtCore.QSize(16777215, 44))
        font = QtGui.QFont()
        font.setPointSize(26)
        self.Program_Name.setFont(font)
        self.Program_Name.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.Program_Name.setTextFormat(QtCore.Qt.AutoText)
        self.Program_Name.setObjectName("Program_Name")
        self.horizontalLayout_3.addWidget(self.Program_Name)
        self.horizontalLayout_2.addWidget(self.Lable_Up)
        self.verticalLayout_2.addWidget(self.Panel_Up)
        self.Centre = QtWidgets.QFrame(self.frame)
        self.Centre.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.Centre.setStyleSheet("background-color: rgb(42, 44, 54);")
        self.Centre.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Centre.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Centre.setObjectName("Centre")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.Centre)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(6)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.Box_Buttons = QtWidgets.QFrame(self.Centre)
        self.Box_Buttons.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.Box_Buttons.setStyleSheet("background-color: rgb(26, 28, 34);")
        self.Box_Buttons.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Box_Buttons.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Box_Buttons.setObjectName("Box_Buttons")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.Box_Buttons)
        self.verticalLayout_3.setContentsMargins(1, 1, 1, 1)
        self.verticalLayout_3.setSpacing(1)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.Box_Up = QtWidgets.QFrame(self.Box_Buttons)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Box_Up.sizePolicy().hasHeightForWidth())
        self.Box_Up.setSizePolicy(sizePolicy)
        self.Box_Up.setMaximumSize(QtCore.QSize(16777215, 150))
        self.Box_Up.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.Box_Up.setStyleSheet(" QPushButton#pushButton {\n"
                                  "     background-color: rgb(33, 36, 43);\n"
                                  " }\n"
                                  " QPushButton#pushButton:hover {\n"
                                  "     background-color: rgb(41, 43, 53);\n"
                                  " }")
        self.Box_Up.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Box_Up.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Box_Up.setObjectName("Box_Up")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.Box_Up)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.Save_Button = QtWidgets.QPushButton(self.Box_Up)
        self.Save_Button.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.Save_Button.setFont(font)
        self.Save_Button.setStyleSheet(" QPushButton#Save_Button {\n"
                                       "background-color: rgb(26, 28, 34);\n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    border: none;\n"
                                       " }\n"
                                       " QPushButton#Save_Button:hover {\n"
                                       "    background-color: rgb(41, 43, 53);\n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    border: none;\n"
                                       " }\n"
                                       " QPushButton#Save_Button:pressed {\n"
                                       "background-color: rgb(54, 57, 70);\n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    border: none;     \n"
                                       " }")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/Save-512.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Save_Button.setIcon(icon)
        self.Save_Button.setIconSize(QtCore.QSize(40, 40))
        self.Save_Button.setAutoDefault(False)
        self.Save_Button.setDefault(False)
        self.Save_Button.setFlat(False)
        self.Save_Button.setObjectName("Save_Button")
        self.verticalLayout_4.addWidget(self.Save_Button)
        self.Open_Button = QtWidgets.QPushButton(self.Box_Up)
        self.Open_Button.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.Open_Button.setFont(font)
        self.Open_Button.setStyleSheet(" QPushButton#Open_Button {\n"
                                       "background-color: rgb(26, 28, 34);\n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    border: none;\n"
                                       " }\n"
                                       " QPushButton#Open_Button:hover {\n"
                                       "    background-color: rgb(41, 43, 53);\n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    border: none;\n"
                                       " }\n"
                                       " QPushButton#Open_Button:pressed {\n"
                                       "background-color: rgb(54, 57, 70);\n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    border: none;     \n"
                                       " }")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap('icons/Document-Add-02-512.png'), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Open_Button.setIcon(icon1)
        self.Open_Button.setIconSize(QtCore.QSize(40, 40))
        self.Open_Button.setFlat(True)
        self.Open_Button.setObjectName("Open_Button")
        self.verticalLayout_4.addWidget(self.Open_Button)
        self.Run_Button = QtWidgets.QPushButton(self.Box_Up)
        self.Run_Button.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.Run_Button.setFont(font)
        self.Run_Button.setStyleSheet(" QPushButton#Run_Button {\n"
                                      "background-color: rgb(26, 28, 34);\n"
                                      "    color: rgb(255, 255, 255);\n"
                                      "    border: none;\n"
                                      " }\n"
                                      " QPushButton#Run_Button:hover {\n"
                                      "    background-color: rgb(41, 43, 53);\n"
                                      "    color: rgb(255, 255, 255);\n"
                                      "    border: none;\n"
                                      " }\n"
                                      " QPushButton#Run_Button:pressed {\n"
                                      "background-color: rgb(54, 57, 70);\n"
                                      "    color: rgb(255, 255, 255);\n"
                                      "    border: none;     \n"
                                      " }")
        self.Run_Button.setFlat(True)
        self.Run_Button.setObjectName("Run_Button")
        self.verticalLayout_4.addWidget(self.Run_Button)
        self.verticalLayout_3.addWidget(self.Box_Up)
        self.dummy_3 = QtWidgets.QFrame(self.Box_Buttons)
        self.dummy_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.dummy_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.dummy_3.setObjectName("dummy_3")
        self.verticalLayout_3.addWidget(self.dummy_3)
        self.Box_Doun = QtWidgets.QFrame(self.Box_Buttons)
        self.Box_Doun.setMaximumSize(QtCore.QSize(16777215, 150))
        self.Box_Doun.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Box_Doun.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Box_Doun.setObjectName("Box_Doun")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.Box_Doun)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.Delete_Button = QtWidgets.QPushButton(self.Box_Doun)
        self.Delete_Button.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.Delete_Button.setFont(font)
        self.Delete_Button.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.Delete_Button.setStyleSheet(" QPushButton#Delete_Button {\n"
                                         "background-color: rgb(26, 28, 34);\n"
                                         "    color: rgb(255, 255, 255);\n"
                                         "    border: none;\n"
                                         " }\n"
                                         " QPushButton#Delete_Button:hover {\n"
                                         "    background-color: rgb(41, 43, 53);\n"
                                         "    color: rgb(255, 255, 255);\n"
                                         "    border: none;\n"
                                         " }\n"
                                         " QPushButton#Delete_Button:pressed {\n"
                                         "background-color: rgb(54, 57, 70);\n"
                                         "    color: rgb(255, 255, 255);\n"
                                         "    border: none;     \n"
                                         " }")
        self.Delete_Button.setAutoDefault(False)
        self.Delete_Button.setDefault(False)
        self.Delete_Button.setFlat(True)
        self.Delete_Button.setObjectName("Delete_Button")
        self.verticalLayout_5.addWidget(self.Delete_Button)
        self.Help_Button = QtWidgets.QPushButton(self.Box_Doun)
        self.Help_Button.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.Help_Button.setFont(font)
        self.Help_Button.setStyleSheet(" QPushButton#Help_Button {\n"
                                       "background-color: rgb(26, 28, 34);\n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    border: none;\n"
                                       " }\n"
                                       " QPushButton#Help_Button:hover {\n"
                                       "    background-color: rgb(41, 43, 53);\n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    border: none;\n"
                                       " }\n"
                                       " QPushButton#Help_Button:pressed {\n"
                                       "background-color: rgb(54, 57, 70);\n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    border: none;     \n"
                                       " }color: rgb(255, 255, 255);")
        self.Help_Button.setFlat(True)
        self.Help_Button.setObjectName("Help_Button")
        self.verticalLayout_5.addWidget(self.Help_Button)
        self.Exit_Button = QtWidgets.QPushButton(self.Box_Doun)
        self.Exit_Button.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.Exit_Button.setFont(font)
        self.Exit_Button.setStyleSheet(" QPushButton#Exit_Button {\n"
                                       "background-color: rgb(26, 28, 34);\n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    border: none;\n"
                                       " }\n"
                                       " QPushButton#Exit_Button:hover {\n"
                                       "    background-color: rgb(41, 43, 53);\n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    border: none;\n"
                                       " }\n"
                                       " QPushButton#Exit_Button:pressed {\n"
                                       "background-color: rgb(54, 57, 70);\n"
                                       "    color: rgb(255, 255, 255);\n"
                                       "    border: none;     \n"
                                       " }color: rgb(255, 255, 255);")
        self.Exit_Button.setFlat(True)
        self.Exit_Button.setObjectName("Exit_Button")
        self.verticalLayout_5.addWidget(self.Exit_Button)
        self.verticalLayout_3.addWidget(self.Box_Doun)
        self.horizontalLayout.addWidget(self.Box_Buttons)
        self.Field = QtWidgets.QFrame(self.Centre)
        self.Field.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.Field.setStyleSheet("color: rgb(255, 255, 255);")
        self.Field.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Field.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Field.setObjectName("Field")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.Field)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.Function_field = QtWidgets.QFrame(self.Field)
        self.Function_field.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Function_field.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Function_field.setObjectName("Function_field")
        self.gridLayout = QtWidgets.QGridLayout(self.Function_field)
        self.gridLayout.setContentsMargins(5, 5, 5, 5)
        self.gridLayout.setSpacing(5)
        self.gridLayout.setObjectName("gridLayout")
        self.Function_Rz = QtWidgets.QTextEdit(self.Function_field)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(16)
        self.Function_Rz.setFont(font)
        self.Function_Rz.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.Function_Rz.setStyleSheet("background-color: rgb(56, 59, 68);")
        self.Function_Rz.setFrameShape(QtWidgets.QFrame.Box)
        self.Function_Rz.setObjectName("Function_Rz")
        self.gridLayout.addWidget(self.Function_Rz, 1, 0, 1, 1)
        self.verticalLayout_6.addWidget(self.Function_field)
        self.Parameters = QtWidgets.QFrame(self.Field)
        self.Parameters.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.Parameters.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Parameters.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Parameters.setObjectName("Parameters")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.Parameters)
        self.gridLayout_4.setContentsMargins(6, 6, 6, -1)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.z_start_label = QtWidgets.QLabel(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.z_start_label.setFont(font)
        self.z_start_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.z_start_label.setObjectName("z_start_label")
        self.gridLayout_4.addWidget(self.z_start_label, 0, 4, 1, 1)
        self.z_start_lineEdit = QtWidgets.QLineEdit(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.z_start_lineEdit.setFont(font)
        self.z_start_lineEdit.setFrame(True)
        self.z_start_lineEdit.setDragEnabled(False)
        self.z_start_lineEdit.setObjectName("z_start_lineEdit")
        self.gridLayout_4.addWidget(self.z_start_lineEdit, 0, 5, 1, 1)
        self.z_finish_label = QtWidgets.QLabel(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.z_finish_label.setFont(font)
        self.z_finish_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.z_finish_label.setObjectName("z_finish_label")
        self.gridLayout_4.addWidget(self.z_finish_label, 0, 6, 1, 1)
        self.z_finish_lineEdit = QtWidgets.QLineEdit(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.z_finish_lineEdit.setFont(font)
        self.z_finish_lineEdit.setObjectName("z_finish_lineEdit")
        self.gridLayout_4.addWidget(self.z_finish_lineEdit, 0, 7, 1, 1)
        self.Sigma_label = QtWidgets.QLabel(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.Sigma_label.setFont(font)
        self.Sigma_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.Sigma_label.setObjectName("Sigma_label")
        self.gridLayout_4.addWidget(self.Sigma_label, 1, 0, 1, 1)
        self.n_lineEdit = QtWidgets.QLineEdit(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.n_lineEdit.setFont(font)
        self.n_lineEdit.setObjectName("n_lineEdit")
        self.gridLayout_4.addWidget(self.n_lineEdit, 0, 3, 1, 1)
        self.m_label = QtWidgets.QLabel(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.m_label.setFont(font)
        self.m_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.m_label.setObjectName("m_label")
        self.gridLayout_4.addWidget(self.m_label, 1, 2, 1, 1)
        self.m_lineEdit = QtWidgets.QLineEdit(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.m_lineEdit.setFont(font)
        self.m_lineEdit.setObjectName("m_lineEdit")
        self.gridLayout_4.addWidget(self.m_lineEdit, 1, 3, 1, 1)
        self.z_left__label = QtWidgets.QLabel(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.z_left__label.setFont(font)
        self.z_left__label.setStyleSheet("color: rgb(255, 255, 255);")
        self.z_left__label.setObjectName("z_left__label")
        self.gridLayout_4.addWidget(self.z_left__label, 1, 4, 1, 1)
        self.Nmods_label = QtWidgets.QLabel(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.Nmods_label.setFont(font)
        self.Nmods_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.Nmods_label.setObjectName("Nmods_label")
        self.gridLayout_4.addWidget(self.Nmods_label, 0, 0, 1, 1)
        self.Sigma_lineEdit = QtWidgets.QLineEdit(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.Sigma_lineEdit.setFont(font)
        self.Sigma_lineEdit.setObjectName("Sigma_lineEdit")
        self.gridLayout_4.addWidget(self.Sigma_lineEdit, 1, 1, 1, 1)
        self.Nmods_lineEdit = QtWidgets.QLineEdit(self.Parameters)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 44, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 44, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 44, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 44, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 44, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 44, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 44, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 44, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(42, 44, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.Nmods_lineEdit.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.Nmods_lineEdit.setFont(font)
        self.Nmods_lineEdit.setObjectName("Nmods_lineEdit")
        self.gridLayout_4.addWidget(self.Nmods_lineEdit, 0, 1, 1, 1)
        self.n_label = QtWidgets.QLabel(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.n_label.setFont(font)
        self.n_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.n_label.setObjectName("n_label")
        self.gridLayout_4.addWidget(self.n_label, 0, 2, 1, 1)
        self.z_right_lineEdit = QtWidgets.QLineEdit(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.z_right_lineEdit.setFont(font)
        self.z_right_lineEdit.setObjectName("z_right_lineEdit")
        self.gridLayout_4.addWidget(self.z_right_lineEdit, 1, 7, 1, 1)
        self.z_left_lineEdit = QtWidgets.QLineEdit(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.z_left_lineEdit.setFont(font)
        self.z_left_lineEdit.setObjectName("z_left_lineEdit")
        self.gridLayout_4.addWidget(self.z_left_lineEdit, 1, 5, 1, 1)
        self.L_label = QtWidgets.QLabel(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.L_label.setFont(font)
        self.L_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.L_label.setObjectName("L_label")
        self.gridLayout_4.addWidget(self.L_label, 2, 2, 1, 1)
        self.dz_lineEdit = QtWidgets.QLineEdit(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.dz_lineEdit.setFont(font)
        self.dz_lineEdit.setObjectName("dz_lineEdit")
        self.gridLayout_4.addWidget(self.dz_lineEdit, 2, 7, 1, 1)
        self.Omega_lineEdit = QtWidgets.QLineEdit(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.Omega_lineEdit.setFont(font)
        self.Omega_lineEdit.setObjectName("Omega_lineEdit")
        self.gridLayout_4.addWidget(self.Omega_lineEdit, 2, 1, 1, 1)
        self.R0_label = QtWidgets.QLabel(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.R0_label.setFont(font)
        self.R0_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.R0_label.setObjectName("R0_label")
        self.gridLayout_4.addWidget(self.R0_label, 2, 4, 1, 1)
        self.dz_label = QtWidgets.QLabel(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.dz_label.setFont(font)
        self.dz_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.dz_label.setObjectName("dz_label")
        self.gridLayout_4.addWidget(self.dz_label, 2, 6, 1, 1)
        self.Omega_label = QtWidgets.QLabel(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.Omega_label.setFont(font)
        self.Omega_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.Omega_label.setObjectName("Omega_label")
        self.gridLayout_4.addWidget(self.Omega_label, 2, 0, 1, 1)
        self.R0_lineEdit = QtWidgets.QLineEdit(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.R0_lineEdit.setFont(font)
        self.R0_lineEdit.setObjectName("R0_lineEdit")
        self.gridLayout_4.addWidget(self.R0_lineEdit, 2, 5, 1, 1)
        self.L_lineEdit = QtWidgets.QLineEdit(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.L_lineEdit.setFont(font)
        self.L_lineEdit.setObjectName("L_lineEdit")
        self.gridLayout_4.addWidget(self.L_lineEdit, 2, 3, 1, 1)
        self.z_right_label = QtWidgets.QLabel(self.Parameters)
        font = QtGui.QFont()
        font.setFamily("Trebuchet MS")
        font.setPointSize(14)
        self.z_right_label.setFont(font)
        self.z_right_label.setStyleSheet("color: rgb(255, 255, 255);")
        self.z_right_label.setObjectName("z_right_label")
        self.gridLayout_4.addWidget(self.z_right_label, 1, 6, 1, 1)
        self.verticalLayout_6.addWidget(self.Parameters)
        self.dummy_4 = QtWidgets.QFrame(self.Field)
        self.dummy_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.dummy_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.dummy_4.setObjectName("dummy_4")
        self.verticalLayout_6.addWidget(self.dummy_4)
        self.horizontalLayout.addWidget(self.Field)
        self.verticalLayout_2.addWidget(self.Centre)
        self.Statusbar = QtWidgets.QFrame(self.frame)
        self.Statusbar.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Statusbar.setStyleSheet("background-color: rgb(26, 28, 34);\n"
                                     "color: rgb(136, 133, 161);")
        self.Statusbar.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Statusbar.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Statusbar.setObjectName("Statusbar")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.Statusbar)
        self.horizontalLayout_4.setContentsMargins(5, 1, 5, 1)
        self.horizontalLayout_4.setSpacing(1)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.Named = QtWidgets.QLabel(self.Statusbar)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Named.setFont(font)
        self.Named.setObjectName("Named")
        self.horizontalLayout_4.addWidget(self.Named)
        self.dummy_2 = QtWidgets.QLabel(self.Statusbar)
        self.dummy_2.setMaximumSize(QtCore.QSize(30, 16777215))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.dummy_2.setFont(font)
        self.dummy_2.setText("")
        self.dummy_2.setObjectName("dummy_2")
        self.horizontalLayout_4.addWidget(self.dummy_2)
        self.Number_Version = QtWidgets.QLabel(self.Statusbar)
        self.Number_Version.setMaximumSize(QtCore.QSize(50, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Number_Version.setFont(font)
        self.Number_Version.setStyleSheet("")
        self.Number_Version.setTextFormat(QtCore.Qt.PlainText)
        self.Number_Version.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.Number_Version.setObjectName("Number_Version")
        self.horizontalLayout_4.addWidget(self.Number_Version)
        self.verticalLayout_2.addWidget(self.Statusbar)
        self.verticalLayout.addWidget(self.frame)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # вызыв основных функций
        self.button_click_processing()

    # наименования строк
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Gyrotron Cavity"))
        self.Program_Name.setText(_translate("MainWindow", "Gyrotron Cavity"))
        self.Save_Button.setText(_translate("MainWindow", "Сохранить "))
        self.Open_Button.setText(_translate("MainWindow", "Открыть"))
        self.Run_Button.setText(_translate("MainWindow", "Запуск"))
        self.Delete_Button.setText(_translate("MainWindow", "Очистить"))
        self.Help_Button.setText(_translate("MainWindow", "Help"))
        self.Exit_Button.setText(_translate("MainWindow", "Exit"))
        self.z_start_label.setText(_translate("MainWindow", "z start"))
        self.z_finish_label.setText(_translate("MainWindow", "z finish"))
        self.Sigma_label.setText(_translate("MainWindow", "Sigma"))
        self.m_label.setText(_translate("MainWindow", "m"))
        self.z_left__label.setText(_translate("MainWindow", "z left"))
        self.Nmods_label.setText(_translate("MainWindow", "Mods"))
        self.n_label.setText(_translate("MainWindow", "n"))
        self.L_label.setText(_translate("MainWindow", "L"))
        self.R0_label.setText(_translate("MainWindow", "R0"))
        self.dz_label.setText(_translate("MainWindow", "dz"))
        self.Omega_label.setText(_translate("MainWindow", "Omega"))
        self.z_right_label.setText(_translate("MainWindow", "z right"))
        self.Named.setText(_translate("MainWindow", "СГУ"))
        self.Number_Version.setText(_translate("MainWindow", "v1.0.0"))

    # обработка нажатий на кнопки
    def button_click_processing(self):
        # выполнение функции "Run" по нажатию кнопки "Запуск"
        self.Run_Button.clicked.connect(self.run)
        # выполнение функции "save" по нажатию кнопки "Сохранить"
        self.Save_Button.clicked.connect(self.save)
        # выполнение функции "open" по нажатию кнопки "Открыть"
        self.Open_Button.clicked.connect(self.open)
        # выполнение функции "delete" по нажатию кнопки "Очистить"
        self.Delete_Button.clicked.connect(self.delete)
        # выполнение функции "help" по нажатию кнопки "Help"
        self.Help_Button.clicked.connect(self.help)
        # выполнение функции "exit" по нажатию кнопки "Exit"
        self.Exit_Button.clicked.connect(self.exit)

    # Построение профиля резонатора
    def Rz(self, zi, RZ):
        global Ri
        Rzt = array([0.0] * len(zi))
        n = -1
        for i in zi:
            n += 1
            z = i
            for j in range(0, len(RZ), 2):
                if eval(RZ[j]):
                    Rzt[n] = eval(RZ[j + 1])
        Ri = Rzt

        plt.figure(figsize = (12, 6.75))
        plt.xlabel('z, мм')
        plt.ylabel('R(z), мм')
        plt.grid(True)
        plt.plot(zi * 1000, Rzt * 1000, "b")
        plt.plot(zi * 1000, -Rzt * 1000, "b")
        plt.subplots_adjust(top = 0.98, bottom = 0.08, left = 0.08, right = 0.98, hspace = 0.2, wspace = 0.2)
        plt.show()

    # присваивание значений переменым и посторение графика
    def run(self):
        try:

            c0 = 299792458
            mu0 = 4 * np.pi * 10 ** (-7)  # мю 0
            epsilon0 = 8.854187935757958 * 10 ** (-12)
            e0 = 1.602176620898 * 10 ** (-19)
            m0 = 9.10938356 * 10 ** (-31)
            mm = 10 ** (-3)
            cm = 10 ** (-2)
            GHz = 10 ** 9

            n = int(self.n_lineEdit.text())
            m = int(self.m_lineEdit.text())
            nMods = int(self.Nmods_lineEdit.text())
            sigma = float(self.Sigma_lineEdit.text())
            OmegaL2divR2 = complex(self.Omega_lineEdit.text())

            R0 = self.R0_lineEdit.text()
            L = self.L_lineEdit.text()
            z_left = self.z_left_lineEdit.text()
            z_right = self.z_right_lineEdit.text()
            z_start = self.z_start_lineEdit.text()
            z_finish = self.z_finish_lineEdit.text()
            dz = self.dz_lineEdit.text()

            list_input = [R0, L, z_left, z_right, z_start, z_finish, dz]
            list_output = Auxiliary_Functions.transfer_to_the_SI_system(Auxiliary_Functions, list_input)

            R0 = float(list_output[0])
            L = float(list_output[1])
            z_left = float(list_output[2])
            z_right = float(list_output[3])
            z_start = float(list_output[4])
            z_finish = float(list_output[5])
            dz = float(list_output[6])

            """Считывание функции"""
            RZ = self.Function_Rz.toPlainText()
            RZt = []
            RZ = RZ.split("\n")
            for i in RZ:
                RZt.append(i.split(", "))
            RZ = []
            for i in RZt:
                RZ += i

            """ Сетка по координате """
            znorm = L
            zi = arange(z_left, z_right, dz)
            zi = zi[::-1]
            NN = len(zi)

            """Rz"""
            self.Rz(zi, RZ)

            """|"""
            Tolerance = 0.1e-07
            Shift = 0
            ShiftFraction = 0.5
            Eigenfunc = 1
            LinApprox = 1
            CondNumber = 0

            file = open("DataForFortran.dat", "w")
            file.write("m" + " " * 15 + str(m) + "\n")
            file.write("nr" + " " * 14 + str(n) + "\n")
            file.write("L" + " " * 15 + str(Auxiliary_Functions.scientific_notation(Auxiliary_Functions, L)) + "\n")
            file.write("NModes" + " " * 10 + str(nMods) + "\n")
            file.write("R0" + " " * 14 + str(Auxiliary_Functions.scientific_notation(Auxiliary_Functions, R0)) + "\n")
            file.write(
                "sigma" + " " * 11 + str(Auxiliary_Functions.scientific_notation(Auxiliary_Functions, sigma)) + "\n")
            file.write("OmegaL2divR20re" + " " * 1 + str(
                Auxiliary_Functions.scientific_notation(Auxiliary_Functions, OmegaL2divR2.real)) + "\n")
            file.write("OmegaL2divR20im" + " " * 1 + str(
                Auxiliary_Functions.scientific_notation(Auxiliary_Functions, OmegaL2divR2.imag)) + "\n")
            file.write(
                "zleft" + " " * 11 + str(Auxiliary_Functions.scientific_notation(Auxiliary_Functions, z_left)) + "\n")
            file.write(
                "zright" + " " * 10 + str(Auxiliary_Functions.scientific_notation(Auxiliary_Functions, z_right)) + "\n")
            file.write(
                "zstart" + " " * 10 + str(Auxiliary_Functions.scientific_notation(Auxiliary_Functions, z_start)) + "\n")
            file.write(
                "zfin" + " " * 12 + str(Auxiliary_Functions.scientific_notation(Auxiliary_Functions,z_finish)) + "\n")
            file.write("dz" + " " * 14 + str(Auxiliary_Functions.scientific_notation(Auxiliary_Functions, dz)) + "\n")
            file.write("Tolerance" + " " * 7 + str(
                Auxiliary_Functions.scientific_notation(Auxiliary_Functions, Tolerance)) + "\n")
            file.write(
                "Shift" + " " * 11 + str(Auxiliary_Functions.scientific_notation(Auxiliary_Functions, Shift)) + "\n")
            file.write("ShiftFraction" + " " * 3 + str(
                Auxiliary_Functions.scientific_notation(Auxiliary_Functions, ShiftFraction)) + "\n")
            file.write("Eigenfunc" + " " * 7 + str(Eigenfunc) + "\n")
            file.write("LinApprox" + " " * 7 + str(LinApprox) + "\n")
            file.write("CondNumber" + " " * 6 + str(CondNumber) + "\n")
            file.write("NN" + " " * 14 + str(NN) + "\n")
            file.write("Ri" + " " * 12)

            for i in range(0, len(Ri) - 5, 5):
                for j in range(5):
                    file.write("  " + str(Auxiliary_Functions.scientific_notation(Auxiliary_Functions, Ri[i + j])))
                file.write("\n")
                file.write(" " * 14)

            if len(Ri) % 5 != 0:
                for i in range(len(Ri) % 5, 0, -1):
                    file.write("  " + str(Auxiliary_Functions.scientific_notation(Auxiliary_Functions, Ri[-i])))

            file.close()

            self.start_GyCa()
            for i in range(nMods):
                plot_mods(i, zi)

        except:
            error = QMessageBox()
            error.setWindowTitle("Ошибка")
            error.setText("Ошибка ввода")
            error.setIcon(QMessageBox.Warning)
            error.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
            error.setDetailedText("Данные введены не корректно или заполнены не все поля ввода")
            error.exec_()

    # сохраняет данные в файл
    def save(self):
        try:
            n = self.n_lineEdit.text()
            m = self.m_lineEdit.text()
            R0 = self.R0_lineEdit.text()
            L = self.L_lineEdit.text()
            nMods = self.Nmods_lineEdit.text()
            sigma = self.Sigma_lineEdit.text()
            omega = self.Omega_lineEdit.text()
            z_left = self.z_left_lineEdit.text()
            z_right = self.z_right_lineEdit.text()
            z_start = self.z_start_lineEdit.text()
            z_finish = self.z_finish_lineEdit.text()
            dz = self.dz_lineEdit.text()
            RZ = self.Function_Rz.toPlainText()

            lines = [n, m, R0, L, nMods, sigma, omega, z_left, z_right, z_start, z_finish, dz, RZ]

            file_name = QFileDialog.getSaveFileName()
            file = open(file_name[0], "w")
            with file:
                for line in lines:
                    file.write(line)
                    file.write("\n")
            file.close()

        except:
            pass

    # открывает файл со значениями, вставляет в поля ввода
    def open(self):
        try:
            fname = QFileDialog.getOpenFileName()
            file = open(fname[0], "r")
            self.n_lineEdit.setText((file.readline()))
            self.m_lineEdit.setText(file.readline())
            self.R0_lineEdit.setText(file.readline())
            self.L_lineEdit.setText(file.readline())
            self.Nmods_lineEdit.setText(file.readline())
            self.Sigma_lineEdit.setText(file.readline())
            self.Omega_lineEdit.setText(file.readline())
            self.z_left_lineEdit.setText(file.readline())
            self.z_right_lineEdit.setText(file.readline())
            self.z_start_lineEdit.setText(file.readline())
            self.z_finish_lineEdit.setText(file.readline())
            self.dz_lineEdit.setText(file.readline())
            func = file.readlines()
            funct = []
            func = [[j for j in i.split()] for i in func]
            for i in func:
                funct.append(' '.join(i))
            self.Function_Rz.setText(str('\n'.join(funct)))

            file.close()

        except:
            pass

    # очищает поля ввода
    def delete(self):
        try:
            self.n_lineEdit.setText("")
            self.m_lineEdit.setText("")
            self.R0_lineEdit.setText("")
            self.L_lineEdit.setText("")
            self.Nmods_lineEdit.setText("")
            self.Sigma_lineEdit.setText("")
            self.Omega_lineEdit.setText("")
            self.z_left_lineEdit.setText("")
            self.z_right_lineEdit.setText("")
            self.z_start_lineEdit.setText("")
            self.z_finish_lineEdit.setText("")
            self.dz_lineEdit.setText("")
            self.Function_Rz.setText("")

        except:
            pass

    # помощь
    def help(self):
        pass

    # закрывает программу
    def exit(self):
        exit()

    def start_GyCa(self):
        subprocess.call("gyrocavityfdm.exe DataForFortran.dat MathExport1.dat")
